

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Sep 25 00:52:16 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	functab,global,class=ENTRY,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453                           
   454 ;; Function _deletar_receita is unused but had its address taken
   455  0000                     
   456 ;; Function _formatar_receitas is unused but had its address taken
   457  0000                     
   458 ;; Function _dispLCD_num is unused but had its address taken
   459  0000                     
   460 ;; Function _dispLCD_clr is unused but had its address taken
   461  0000                     
   462 ;; Function _dispLCD_B0 is unused but had its address taken
   463  0000                     
   464 ;; Function _dispLCD_B1 is unused but had its address taken
   465  0000                     
   466                           	psect	idataBANK0
   467  05CE                     __pidataBANK0:
   468                           
   469                           ;initializer for _lcd
   470  05CE  3407               	retlw	low (fp__dispLCD_init-fpbase)
   471  05CF  340A               	retlw	low (fp__dispLCDstr-fpbase)
   472  05D0  3404               	retlw	low (fp__dispLCD-fpbase)
   473  05D1  3400               	retlw	0
   474  05D2  3400               	retlw	0
   475  05D3  3400               	retlw	0
   476  05D4  3400               	retlw	0
   477                           
   478                           ;initializer for _receita
   479  05D5  3410               	retlw	low (fp__salvar_receita-fpbase)
   480  05D6  3401               	retlw	low (fp__buscar_receita-fpbase)
   481  05D7  3400               	retlw	0
   482  05D8  340D               	retlw	low (fp__receita_livre-fpbase)
   483  05D9  3400               	retlw	0
   484                           
   485                           ;initializer for _linha1
   486  05DA  3420               	retlw	32
   487  05DB  3420               	retlw	32
   488  05DC  3420               	retlw	32
   489  05DD  3420               	retlw	32
   490  05DE  3420               	retlw	32
   491  05DF  3420               	retlw	32
   492  05E0  3420               	retlw	32
   493  05E1  3420               	retlw	32
   494  05E2  3420               	retlw	32
   495  05E3  3420               	retlw	32
   496  05E4  3420               	retlw	32
   497  05E5  3420               	retlw	32
   498  05E6  3420               	retlw	32
   499  05E7  3420               	retlw	32
   500  05E8  3420               	retlw	32
   501  05E9  3420               	retlw	32
   502                           
   503                           ;initializer for _linha0
   504  05EA  3454               	retlw	84
   505  05EB  3445               	retlw	69
   506  05EC  3453               	retlw	83
   507  05ED  3454               	retlw	84
   508  05EE  3445               	retlw	69
   509  05EF  3420               	retlw	32
   510  05F0  342D               	retlw	45
   511  05F1  3420               	retlw	32
   512  05F2  3454               	retlw	84
   513  05F3  3445               	retlw	69
   514  05F4  3453               	retlw	83
   515  05F5  3454               	retlw	84
   516  05F6  3445               	retlw	69
   517  05F7  3420               	retlw	32
   518  05F8  342D               	retlw	45
   519  05F9  3420               	retlw	32
   520                           
   521                           	psect	strings
   522  001B                     __pstrings:
   523  001B                     stringtab:
   524  001B                     __stringtab:
   525  001B                     stringcode:	
   526                           ;	String table - string pointers are 1 byte each
   527                           
   528  001B                     stringdir:
   529  001B  3000               	movlw	high stringdir
   530  001C  008A               	movwf	10
   531  001D  0804               	movf	4,w
   532  001E  0A84               	incf	4,f
   533  001F  0782               	addwf	2,f
   534  0020                     __stringbase:
   535  0020  3400               	retlw	0
   536  0021                     __end_of__stringtab:
   537  0021                     _newChar_degree:
   538  0021  3404               	retlw	4
   539  0022  340A               	retlw	10
   540  0023  3404               	retlw	4
   541  0024  3400               	retlw	0
   542  0025  3400               	retlw	0
   543  0026  3400               	retlw	0
   544  0027  3400               	retlw	0
   545  0028  3400               	retlw	0
   546  0029                     __end_of_newChar_degree:
   547  0008                     _LCDbits	set	8
   548  000B                     _INTCONbits	set	11
   549  0088                     _TRISDbits	set	136
   550  010C                     _EEDAT	set	268
   551  010D                     _EEADR	set	269
   552  010F                     _EEADRH	set	271
   553  018D                     _EECON2	set	397
   554  018C                     _EECON1bits	set	396
   555                           
   556                           	psect	cinit
   557  07EE                     start_initialization:	
   558                           ; #config settings
   559                           
   560  07EE                     __initialization:
   561                           
   562                           ; Initialize objects allocated to BANK0
   563  07EE  1383               	bcf	3,7	;select IRP bank0
   564  07EF  304C               	movlw	low (__pdataBANK0+44)
   565  07F0  00FD               	movwf	btemp+-1
   566  07F1  3005               	movlw	high __pidataBANK0
   567  07F2  00FE               	movwf	btemp
   568  07F3  30CE               	movlw	low __pidataBANK0
   569  07F4  00FF               	movwf	btemp+1
   570  07F5  3020               	movlw	low __pdataBANK0
   571  07F6  0084               	movwf	4
   572  07F7  120A  118A  251B  120A  118A  	fcall	init_ram0
   573  07FC                     end_of_initialization:	
   574                           ;End of C runtime variable initialization code
   575                           
   576  07FC                     __end_of__initialization:
   577  07FC  0183               	clrf	3
   578  07FD  120A  118A  2E85   	ljmp	_main	;jump to C main() function
   579                           
   580                           	psect	dataBANK0
   581  0020                     __pdataBANK0:
   582  0020                     _lcd:
   583  0020                     	ds	7
   584  0027                     _receita:
   585  0027                     	ds	5
   586  002C                     _linha1:
   587  002C                     	ds	16
   588  003C                     _linha0:
   589  003C                     	ds	16
   590                           
   591                           	psect	inittext
   592  0517                     init_fetch0:	
   593                           ;	Called with low address in FSR and high address in W
   594                           
   595  0517  087E               	movf	btemp,w
   596  0518  008A               	movwf	10
   597  0519  087F               	movf	btemp+1,w
   598  051A  0082               	movwf	2
   599  051B                     init_ram0:	
   600                           ;Called with:
   601                           ;	high address of idata address in btemp 
   602                           ;	low address of idata address in btemp+1 
   603                           ;	low address of data in FSR
   604                           ;	high address + 1 of data in btemp-1
   605                           
   606  051B  120A  118A  2517  120A  118A  	fcall	init_fetch0
   607  0520  0080               	movwf	0
   608  0521  0A84               	incf	4,f
   609  0522  0804               	movf	4,w
   610  0523  067D               	xorwf	btemp+-1,w
   611  0524  1903               	btfsc	3,2
   612  0525  3400               	retlw	0
   613  0526  0AFF               	incf	btemp+1,f
   614  0527  1903               	btfsc	3,2
   615  0528  0AFE               	incf	btemp,f
   616  0529  2D1B               	goto	init_ram0
   617                           
   618                           	psect	cstackCOMMON
   619  0070                     __pcstackCOMMON:
   620  0070                     ?_delay:
   621  0070                     ?_EEPROM_read:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??_EEPROM_read:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_EEPROM_write:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_dispLCD_instReg:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ??_dispLCD_instReg:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_dispLCD_dataReg:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ??_dispLCD_dataReg:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_dispLCD_init:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_main:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_end_receita:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     EEPROM_read@addr:	
   652                           ; 2 bytes @ 0x0
   653                           
   654  0070                     EEPROM_write@data:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     delay@t:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     end_receita@x:	
   661                           ; 2 bytes @ 0x0
   662                           
   663                           
   664                           ; 2 bytes @ 0x0
   665  0070                     	ds	1
   666  0071                     ??_EEPROM_write:
   667  0071                     EEPROM_write@addr:	
   668                           ; 1 bytes @ 0x1
   669                           
   670  0071                     dispLCD_dataReg@d:	
   671                           ; 1 bytes @ 0x1
   672                           
   673                           
   674                           ; 1 bytes @ 0x1
   675  0071                     	ds	1
   676  0072                     ??_delay:
   677  0072                     ??_end_receita:	
   678                           ; 1 bytes @ 0x2
   679                           
   680  0072                     dispLCD_instReg@i:	
   681                           ; 1 bytes @ 0x2
   682                           
   683                           
   684                           ; 1 bytes @ 0x2
   685  0072                     	ds	1
   686  0073                     ?_dispLCD_lincol:
   687  0073                     ?_dispLCD_newChar:	
   688                           ; 1 bytes @ 0x3
   689                           
   690  0073                     dispLCD_lincol@col:	
   691                           ; 1 bytes @ 0x3
   692                           
   693  0073                     dispLCD_newChar@ptr:	
   694                           ; 1 bytes @ 0x3
   695                           
   696                           
   697                           ; 1 bytes @ 0x3
   698  0073                     	ds	1
   699  0074                     ?_salvar_receita:
   700  0074                     ?_buscar_receita:	
   701                           ; 1 bytes @ 0x4
   702                           
   703  0074                     ?_receita_livre:	
   704                           ; 1 bytes @ 0x4
   705                           
   706  0074                     ??_dispLCD_lincol:	
   707                           ; 1 bytes @ 0x4
   708                           
   709  0074                     ??_dispLCD_newChar:	
   710                           ; 1 bytes @ 0x4
   711                           
   712  0074                     salvar_receita@adrs:	
   713                           ; 1 bytes @ 0x4
   714                           
   715  0074                     buscar_receita@adrs:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     receita_livre@rec:	
   719                           ; 1 bytes @ 0x4
   720                           
   721                           
   722                           ; 1 bytes @ 0x4
   723  0074                     	ds	1
   724  0075                     ??_receita_livre:
   725  0075                     salvar_receita@data:	
   726                           ; 1 bytes @ 0x5
   727                           
   728  0075                     buscar_receita@data:	
   729                           ; 1 bytes @ 0x5
   730                           
   731  0075                     dispLCD_lincol@lin:	
   732                           ; 1 bytes @ 0x5
   733                           
   734  0075                     dispLCD_newChar@adrs:	
   735                           ; 1 bytes @ 0x5
   736                           
   737                           
   738                           ; 1 bytes @ 0x5
   739  0075                     	ds	1
   740  0076                     ??_salvar_receita:
   741  0076                     ??_buscar_receita:	
   742                           ; 1 bytes @ 0x6
   743                           
   744  0076                     ?_dispLCD:	
   745                           ; 1 bytes @ 0x6
   746                           
   747  0076                     ?_dispLCDstr:	
   748                           ; 1 bytes @ 0x6
   749                           
   750  0076                     dispLCD_newChar@i:	
   751                           ; 1 bytes @ 0x6
   752                           
   753  0076                     dispLCD@lin:	
   754                           ; 1 bytes @ 0x6
   755                           
   756  0076                     dispLCDstr@str:	
   757                           ; 1 bytes @ 0x6
   758                           
   759                           
   760                           ; 1 bytes @ 0x6
   761  0076                     	ds	1
   762  0077                     ??_dispLCD_init:
   763  0077                     ??_dispLCDstr:	
   764                           ; 1 bytes @ 0x7
   765                           
   766  0077                     dispLCD@col:	
   767                           ; 1 bytes @ 0x7
   768                           
   769  0077                     receita_livre@aux:	
   770                           ; 1 bytes @ 0x7
   771                           
   772                           
   773                           ; 2 bytes @ 0x7
   774  0077                     	ds	1
   775  0078                     dispLCD@str:
   776  0078                     salvar_receita@aux:	
   777                           ; 1 bytes @ 0x8
   778                           
   779  0078                     buscar_receita@aux:	
   780                           ; 2 bytes @ 0x8
   781                           
   782                           
   783                           ; 2 bytes @ 0x8
   784  0078                     	ds	1
   785  0079                     ??_dispLCD:
   786  0079                     receita_livre@i:	
   787                           ; 1 bytes @ 0x9
   788                           
   789                           
   790                           ; 2 bytes @ 0x9
   791  0079                     	ds	1
   792  007A                     salvar_receita@i:
   793  007A                     buscar_receita@i:	
   794                           ; 1 bytes @ 0xA
   795                           
   796                           
   797                           ; 1 bytes @ 0xA
   798  007A                     	ds	1
   799  007B                     ??_main:
   800                           
   801                           ; 1 bytes @ 0xB
   802  007B                     	ds	1
   803                           
   804                           	psect	maintext
   805  0685                     __pmaintext:	
   806 ;;
   807 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   808 ;;
   809 ;; *************** function _main *****************
   810 ;; Defined at:
   811 ;;		line 14 in file "main.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;                  1    wreg      void 
   818 ;; Registers used:
   819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   820 ;; Tracked objects:
   821 ;;		On entry : B00/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   825 ;;      Params:         0       0       0       0       0
   826 ;;      Locals:         0       0       0       0       0
   827 ;;      Temps:          1       0       0       0       0
   828 ;;      Totals:         1       0       0       0       0
   829 ;;Total ram usage:        1 bytes
   830 ;; Hardware stack levels required when called: 3
   831 ;; This function calls:
   832 ;;		_buscar_receita
   833 ;;		_dispLCD
   834 ;;		_dispLCD_init
   835 ;;		_dispLCDstr
   836 ;;		_receita_livre
   837 ;;		_salvar_receita
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _main
   845  0685                     _main:
   846  0685                     l1316:	
   847                           ;incstack = 0
   848                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   849                           
   850                           
   851                           ;main.c: 17:     lcd.init();
   852  0685  1283               	bcf	3,5	;RP0=0, select bank0
   853  0686  1303               	bcf	3,6	;RP1=0, select bank0
   854  0687  0820               	movf	_lcd,w
   855  0688  120A  118A  2003  120A  118A  	fcall	fptable
   856                           
   857                           ;main.c: 18:     receita.salvar(1,linha0);
   858  068D  01F4               	clrf	salvar_receita@adrs
   859  068E  0AF4               	incf	salvar_receita@adrs,f
   860  068F  303C               	movlw	(low (_linha0| 0))& (0+255)
   861  0690  00FB               	movwf	??_main
   862  0691  087B               	movf	??_main,w
   863  0692  00F5               	movwf	salvar_receita@data
   864  0693  1283               	bcf	3,5	;RP0=0, select bank0
   865  0694  1303               	bcf	3,6	;RP1=0, select bank0
   866  0695  0827               	movf	_receita,w
   867  0696  120A  118A  2003  120A  118A  	fcall	fptable
   868                           
   869                           ;main.c: 19:     receita.buscar(1,linha0);
   870  069B  01F4               	clrf	buscar_receita@adrs
   871  069C  0AF4               	incf	buscar_receita@adrs,f
   872  069D  303C               	movlw	(low (_linha0| 0))& (0+255)
   873  069E  00FB               	movwf	??_main
   874  069F  087B               	movf	??_main,w
   875  06A0  00F5               	movwf	buscar_receita@data
   876  06A1  1283               	bcf	3,5	;RP0=0, select bank0
   877  06A2  1303               	bcf	3,6	;RP1=0, select bank0
   878  06A3  0828               	movf	low ((_receita| 0+1)),w
   879  06A4  120A  118A  2003  120A  118A  	fcall	fptable
   880                           
   881                           ;main.c: 20:     lcd.print(linha0);
   882  06A9  303C               	movlw	(low (_linha0| 0))& (0+255)
   883  06AA  00FB               	movwf	??_main
   884  06AB  087B               	movf	??_main,w
   885  06AC  00F6               	movwf	dispLCDstr@str
   886  06AD  1283               	bcf	3,5	;RP0=0, select bank0
   887  06AE  1303               	bcf	3,6	;RP1=0, select bank0
   888  06AF  0821               	movf	low ((_lcd| 0+1)),w
   889  06B0  120A  118A  2003  120A  118A  	fcall	fptable
   890  06B5                     l1318:
   891                           
   892                           ;main.c: 21:     receita.livre(linha1);
   893  06B5  302C               	movlw	(low (_linha1| 0))& (0+255)
   894  06B6  00FB               	movwf	??_main
   895  06B7  087B               	movf	??_main,w
   896  06B8  00F4               	movwf	receita_livre@rec
   897  06B9  1283               	bcf	3,5	;RP0=0, select bank0
   898  06BA  1303               	bcf	3,6	;RP1=0, select bank0
   899  06BB  082A               	movf	low ((_receita| 0+3)),w
   900  06BC  120A  118A  2003  120A  118A  	fcall	fptable
   901  06C1                     l1320:
   902                           
   903                           ;main.c: 22:     lcd.printpos(1,0,linha1);
   904  06C1  01F6               	clrf	dispLCD@lin
   905  06C2  0AF6               	incf	dispLCD@lin,f
   906  06C3  01F7               	clrf	dispLCD@col
   907  06C4  302C               	movlw	(low (_linha1| 0))& (0+255)
   908  06C5  00FB               	movwf	??_main
   909  06C6  087B               	movf	??_main,w
   910  06C7  00F8               	movwf	dispLCD@str
   911  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   912  06C9  1303               	bcf	3,6	;RP1=0, select bank0
   913  06CA  0822               	movf	low ((_lcd| 0+2)),w
   914  06CB  120A  118A  2003  120A  118A  	fcall	fptable
   915  06D0                     l175:	
   916                           ;main.c: 24:     while(1);
   917                           
   918  06D0                     l176:
   919  06D0  2ED0               	goto	l175
   920  06D1  120A  118A  2800   	ljmp	start
   921  06D4                     __end_of_main:
   922                           
   923                           	psect	text1
   924  0627                     __ptext1:	
   925 ;; *************** function _salvar_receita *****************
   926 ;; Defined at:
   927 ;;		line 46 in file "eeprom.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  adrs            1    4[COMMON] unsigned char 
   930 ;;  data            1    5[COMMON] PTR unsigned char 
   931 ;;		 -> linha0(16), 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  i               1   10[COMMON] unsigned char 
   934 ;;  aux             2    8[COMMON] int 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         2       0       0       0       0
   945 ;;      Locals:         3       0       0       0       0
   946 ;;      Temps:          2       0       0       0       0
   947 ;;      Totals:         7       0       0       0       0
   948 ;;Total ram usage:        7 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; Hardware stack levels required when called: 1
   951 ;; This function calls:
   952 ;;		_EEPROM_write
   953 ;;		_end_receita
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           
   960                           ;psect for function _salvar_receita
   961  0627                     _salvar_receita:
   962  0627                     l1160:	
   963                           ;incstack = 0
   964                           ; Regs used in _salvar_receita: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   965                           
   966                           
   967                           ;eeprom.c: 46: void salvar_receita (char adrs, unsigned char *data );eeprom.c: 47: {;eep
      +                          rom.c: 48:     int aux;;eeprom.c: 49:     aux = end_receita(adrs);
   968  0627  0874               	movf	salvar_receita@adrs,w
   969  0628  00F6               	movwf	??_salvar_receita
   970  0629  01F7               	clrf	??_salvar_receita+1
   971  062A  0876               	movf	??_salvar_receita,w
   972  062B  00F0               	movwf	end_receita@x
   973  062C  0877               	movf	??_salvar_receita+1,w
   974  062D  00F1               	movwf	end_receita@x+1
   975  062E  120A  118A  24F2  120A  118A  	fcall	_end_receita
   976  0633  0871               	movf	?_end_receita+1,w
   977  0634  00F9               	movwf	salvar_receita@aux+1
   978  0635  0870               	movf	?_end_receita,w
   979  0636  00F8               	movwf	salvar_receita@aux
   980  0637                     l1162:
   981                           
   982                           ;eeprom.c: 50:     for( char i=0 ; i<16; i++)
   983  0637  01FA               	clrf	salvar_receita@i
   984  0638                     l1168:
   985                           
   986                           ;eeprom.c: 51:          EEPROM_write( (aux+i), *(data+i) );
   987  0638  087A               	movf	salvar_receita@i,w
   988  0639  0775               	addwf	salvar_receita@data,w
   989  063A  00F6               	movwf	??_salvar_receita
   990  063B  0876               	movf	??_salvar_receita,w
   991  063C  0084               	movwf	4
   992  063D  1383               	bcf	3,7	;select IRP bank0
   993  063E  0800               	movf	0,w
   994  063F  00F7               	movwf	??_salvar_receita+1
   995  0640  0877               	movf	??_salvar_receita+1,w
   996  0641  00F0               	movwf	EEPROM_write@data
   997  0642  0878               	movf	salvar_receita@aux,w
   998  0643  077A               	addwf	salvar_receita@i,w
   999  0644  120A  118A  253F  120A  118A  	fcall	_EEPROM_write
  1000  0649                     l1170:
  1001  0649  3001               	movlw	1
  1002  064A  00F6               	movwf	??_salvar_receita
  1003  064B  0876               	movf	??_salvar_receita,w
  1004  064C  07FA               	addwf	salvar_receita@i,f
  1005  064D                     l1172:
  1006  064D  3010               	movlw	16
  1007  064E  027A               	subwf	salvar_receita@i,w
  1008  064F  1C03               	skipc
  1009  0650  2E52               	goto	u451
  1010  0651  2E53               	goto	u450
  1011  0652                     u451:
  1012  0652  2E38               	goto	l1168
  1013  0653                     u450:
  1014  0653                     l37:
  1015  0653  0008               	return
  1016  0654                     __end_of_salvar_receita:
  1017                           
  1018                           	psect	text2
  1019  053F                     __ptext2:	
  1020 ;; *************** function _EEPROM_write *****************
  1021 ;; Defined at:
  1022 ;;		line 24 in file "eeprom.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  addr            1    wreg     unsigned char 
  1025 ;;  data            1    0[COMMON] unsigned char 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  addr            1    1[COMMON] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         1       0       0       0       0
  1038 ;;      Locals:         1       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0
  1040 ;;      Totals:         2       0       0       0       0
  1041 ;;Total ram usage:        2 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_salvar_receita
  1047 ;;		_deletar_receita
  1048 ;;		_formatar_receitas
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           
  1053                           ;psect for function _EEPROM_write
  1054  053F                     _EEPROM_write:
  1055                           
  1056                           ;incstack = 0
  1057                           ; Regs used in _EEPROM_write: [wreg]
  1058                           ;EEPROM_write@addr stored from wreg
  1059  053F  00F1               	movwf	EEPROM_write@addr
  1060  0540                     l1128:
  1061                           
  1062                           ;eeprom.c: 24: void EEPROM_write( unsigned char addr, unsigned char data );eeprom.c: 25:
      +                           {;eeprom.c: 26:     INTCONbits.GIE = 0;
  1063  0540  138B               	bcf	11,7	;volatile
  1064  0541                     l1130:
  1065                           
  1066                           ;eeprom.c: 27:     EEADR = addr;
  1067  0541  0871               	movf	EEPROM_write@addr,w
  1068  0542  1283               	bcf	3,5	;RP0=0, select bank2
  1069  0543  1703               	bsf	3,6	;RP1=1, select bank2
  1070  0544  008D               	movwf	13	;volatile
  1071                           
  1072                           ;eeprom.c: 28:     EEDAT = data;
  1073  0545  0870               	movf	EEPROM_write@data,w
  1074  0546  008C               	movwf	12	;volatile
  1075  0547                     l1132:
  1076                           
  1077                           ;eeprom.c: 29:     EECON1bits.EEPGD = 0;
  1078  0547  1683               	bsf	3,5	;RP0=1, select bank3
  1079  0548  1703               	bsf	3,6	;RP1=1, select bank3
  1080  0549  138C               	bcf	12,7	;volsfr
  1081  054A                     l1134:
  1082                           
  1083                           ;eeprom.c: 30:     EECON1bits.WREN = 1;
  1084  054A  150C               	bsf	12,2	;volsfr
  1085                           
  1086                           ;eeprom.c: 31:     EECON2 = 0x55;
  1087  054B  3055               	movlw	85
  1088  054C  008D               	movwf	13	;volsfr
  1089                           
  1090                           ;eeprom.c: 32:     EECON2 = 0xAA;
  1091  054D  30AA               	movlw	170
  1092  054E  008D               	movwf	13	;volsfr
  1093  054F                     l1136:
  1094                           
  1095                           ;eeprom.c: 33:     EECON1bits.WR = 1;
  1096  054F  148C               	bsf	12,1	;volsfr
  1097  0550                     l26:	
  1098                           ;eeprom.c: 35:     while( EECON1bits.WR );
  1099                           
  1100  0550  188C               	btfsc	12,1	;volsfr
  1101  0551  2D53               	goto	u411
  1102  0552  2D54               	goto	u410
  1103  0553                     u411:
  1104  0553  2D50               	goto	l26
  1105  0554                     u410:
  1106  0554                     l28:
  1107                           
  1108                           ;eeprom.c: 37:     EECON1bits.WREN = 0;
  1109  0554  110C               	bcf	12,2	;volsfr
  1110                           
  1111                           ;eeprom.c: 38:     INTCONbits.GIE = 1;
  1112  0555  178B               	bsf	11,7	;volatile
  1113  0556                     l29:
  1114  0556  0008               	return
  1115  0557                     __end_of_EEPROM_write:
  1116                           
  1117                           	psect	text3
  1118  06D4                     __ptext3:	
  1119 ;; *************** function _receita_livre *****************
  1120 ;; Defined at:
  1121 ;;		line 71 in file "eeprom.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  rec             1    4[COMMON] PTR unsigned char 
  1124 ;;		 -> linha1(16), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  i               2    9[COMMON] int 
  1127 ;;  aux             2    7[COMMON] int 
  1128 ;; Return value:  Size  Location     Type
  1129 ;;                  1    wreg      void 
  1130 ;; Registers used:
  1131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1132 ;; Tracked objects:
  1133 ;;		On entry : 0/0
  1134 ;;		On exit  : 0/0
  1135 ;;		Unchanged: 0/0
  1136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1137 ;;      Params:         1       0       0       0       0
  1138 ;;      Locals:         4       0       0       0       0
  1139 ;;      Temps:          2       0       0       0       0
  1140 ;;      Totals:         7       0       0       0       0
  1141 ;;Total ram usage:        7 bytes
  1142 ;; Hardware stack levels used: 1
  1143 ;; Hardware stack levels required when called: 1
  1144 ;; This function calls:
  1145 ;;		_EEPROM_read
  1146 ;;		_end_receita
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           
  1153                           ;psect for function _receita_livre
  1154  06D4                     _receita_livre:
  1155  06D4                     l1188:	
  1156                           ;incstack = 0
  1157                           ; Regs used in _receita_livre: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1158                           
  1159                           
  1160                           ;eeprom.c: 71: void receita_livre ( unsigned char * rec);eeprom.c: 72: {;eeprom.c: 73:  
      +                            int aux;;eeprom.c: 74:    for(int i=0;i<16;i++)
  1161  06D4  01F9               	clrf	receita_livre@i
  1162  06D5  01FA               	clrf	receita_livre@i+1
  1163  06D6                     l1194:
  1164                           
  1165                           ;eeprom.c: 75:    {;eeprom.c: 76:        aux = end_receita(i);
  1166  06D6  087A               	movf	receita_livre@i+1,w
  1167  06D7  00F1               	movwf	end_receita@x+1
  1168  06D8  0879               	movf	receita_livre@i,w
  1169  06D9  00F0               	movwf	end_receita@x
  1170  06DA  120A  118A  24F2  120A  118A  	fcall	_end_receita
  1171  06DF  0871               	movf	?_end_receita+1,w
  1172  06E0  00F8               	movwf	receita_livre@aux+1
  1173  06E1  0870               	movf	?_end_receita,w
  1174  06E2  00F7               	movwf	receita_livre@aux
  1175  06E3                     l1196:
  1176                           
  1177                           ;eeprom.c: 77:        if(EEPROM_read(aux) == 0)
  1178  06E3  0877               	movf	receita_livre@aux,w
  1179  06E4  120A  118A  24E4  120A  118A  	fcall	_EEPROM_read
  1180  06E9  3A00               	xorlw	0
  1181  06EA  1D03               	skipz
  1182  06EB  2EED               	goto	u471
  1183  06EC  2EEE               	goto	u470
  1184  06ED                     u471:
  1185  06ED  2F12               	goto	l1204
  1186  06EE                     u470:
  1187  06EE                     l1198:
  1188                           
  1189                           ;eeprom.c: 78:           if(i<10)
  1190  06EE  087A               	movf	receita_livre@i+1,w
  1191  06EF  3A80               	xorlw	128
  1192  06F0  00FF               	movwf	btemp+1
  1193  06F1  3080               	movlw	128
  1194  06F2  027F               	subwf	btemp+1,w
  1195  06F3  1D03               	skipz
  1196  06F4  2EF7               	goto	u485
  1197  06F5  300A               	movlw	10
  1198  06F6  0279               	subwf	receita_livre@i,w
  1199  06F7                     u485:
  1200  06F7  1803               	skipnc
  1201  06F8  2EFA               	goto	u481
  1202  06F9  2EFB               	goto	u480
  1203  06FA                     u481:
  1204  06FA  2F07               	goto	l1202
  1205  06FB                     u480:
  1206  06FB                     l1200:
  1207                           
  1208                           ;eeprom.c: 79:               *(rec + i) = '0'+i;
  1209  06FB  0879               	movf	receita_livre@i,w
  1210  06FC  3E30               	addlw	48
  1211  06FD  00F5               	movwf	??_receita_livre
  1212  06FE  0879               	movf	receita_livre@i,w
  1213  06FF  0774               	addwf	receita_livre@rec,w
  1214  0700  00F6               	movwf	??_receita_livre+1
  1215  0701  0876               	movf	??_receita_livre+1,w
  1216  0702  0084               	movwf	4
  1217  0703  0875               	movf	??_receita_livre,w
  1218  0704  1383               	bcf	3,7	;select IRP bank0
  1219  0705  0080               	movwf	0
  1220  0706  2F12               	goto	l1204
  1221  0707                     l1202:
  1222                           
  1223                           ;eeprom.c: 81:               *(rec + i) = 'A'-10+i;
  1224  0707  0879               	movf	receita_livre@i,w
  1225  0708  3E37               	addlw	55
  1226  0709  00F5               	movwf	??_receita_livre
  1227  070A  0879               	movf	receita_livre@i,w
  1228  070B  0774               	addwf	receita_livre@rec,w
  1229  070C  00F6               	movwf	??_receita_livre+1
  1230  070D  0876               	movf	??_receita_livre+1,w
  1231  070E  0084               	movwf	4
  1232  070F  0875               	movf	??_receita_livre,w
  1233  0710  1383               	bcf	3,7	;select IRP bank0
  1234  0711  0080               	movwf	0
  1235  0712                     l1204:
  1236                           
  1237                           ;eeprom.c: 82:    }
  1238  0712  3001               	movlw	1
  1239  0713  07F9               	addwf	receita_livre@i,f
  1240  0714  1803               	skipnc
  1241  0715  0AFA               	incf	receita_livre@i+1,f
  1242  0716  3000               	movlw	0
  1243  0717  07FA               	addwf	receita_livre@i+1,f
  1244  0718                     l1206:
  1245  0718  087A               	movf	receita_livre@i+1,w
  1246  0719  3A80               	xorlw	128
  1247  071A  00FF               	movwf	btemp+1
  1248  071B  3080               	movlw	128
  1249  071C  027F               	subwf	btemp+1,w
  1250  071D  1D03               	skipz
  1251  071E  2F21               	goto	u495
  1252  071F  3010               	movlw	16
  1253  0720  0279               	subwf	receita_livre@i,w
  1254  0721                     u495:
  1255  0721  1C03               	skipc
  1256  0722  2F24               	goto	u491
  1257  0723  2F25               	goto	u490
  1258  0724                     u491:
  1259  0724  2ED6               	goto	l1194
  1260  0725                     u490:
  1261  0725                     l55:
  1262  0725  0008               	return
  1263  0726                     __end_of_receita_livre:
  1264                           
  1265                           	psect	text4
  1266  05FA                     __ptext4:	
  1267 ;; *************** function _dispLCDstr *****************
  1268 ;; Defined at:
  1269 ;;		line 184 in file "lcd.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  str             1    6[COMMON] PTR const unsigned char 
  1272 ;;		 -> linha0(16), 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1284 ;;      Params:         1       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0
  1286 ;;      Temps:          1       0       0       0       0
  1287 ;;      Totals:         2       0       0       0       0
  1288 ;;Total ram usage:        2 bytes
  1289 ;; Hardware stack levels used: 1
  1290 ;; Hardware stack levels required when called: 2
  1291 ;; This function calls:
  1292 ;;		_dispLCD_dataReg
  1293 ;;		_dispLCD_lincol
  1294 ;; This function is called by:
  1295 ;;		_main
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           
  1300                           ;psect for function _dispLCDstr
  1301  05FA                     _dispLCDstr:
  1302  05FA                     l1240:	
  1303                           ;incstack = 0
  1304                           ; Regs used in _dispLCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1305                           
  1306                           
  1307                           ;lcd.c: 184: void dispLCDstr( const char * str );lcd.c: 185: {;lcd.c: 186:     dispLCD_l
      +                          incol( 0, 0 );
  1308  05FA  01F3               	clrf	dispLCD_lincol@col
  1309  05FB  3000               	movlw	0
  1310  05FC  120A  118A  2504  120A  118A  	fcall	_dispLCD_lincol
  1311                           
  1312                           ;lcd.c: 188:     while( *str )
  1313  0601  2E1E               	goto	l108
  1314  0602                     l1242:
  1315                           
  1316                           ;lcd.c: 189:     {;lcd.c: 190:         if( *str == '\n' )
  1317  0602  0876               	movf	dispLCDstr@str,w
  1318  0603  0084               	movwf	4
  1319  0604  300A               	movlw	10
  1320  0605  0600               	xorwf	0,w
  1321  0606  1D03               	btfss	3,2
  1322  0607  2E09               	goto	u511
  1323  0608  2E0A               	goto	u510
  1324  0609                     u511:
  1325  0609  2E11               	goto	l1246
  1326  060A                     u510:
  1327  060A                     l1244:
  1328                           
  1329                           ;lcd.c: 191:         {;lcd.c: 192:             dispLCD_lincol(1,0);
  1330  060A  01F3               	clrf	dispLCD_lincol@col
  1331  060B  3001               	movlw	1
  1332  060C  120A  118A  2504  120A  118A  	fcall	_dispLCD_lincol
  1333  0611                     l1246:
  1334                           
  1335                           ;lcd.c: 194:         dispLCD_dataReg( *str );
  1336  0611  0876               	movf	dispLCDstr@str,w
  1337  0612  0084               	movwf	4
  1338  0613  1383               	bcf	3,7	;select IRP bank0
  1339  0614  0800               	movf	0,w
  1340  0615  120A  118A  2577  120A  118A  	fcall	_dispLCD_dataReg
  1341  061A                     l1248:
  1342                           
  1343                           ;lcd.c: 195:         ++str;
  1344  061A  3001               	movlw	1
  1345  061B  00F7               	movwf	??_dispLCDstr
  1346  061C  0877               	movf	??_dispLCDstr,w
  1347  061D  07F6               	addwf	dispLCDstr@str,f
  1348  061E                     l108:	
  1349                           ;lcd.c: 196:     }
  1350                           
  1351                           
  1352                           ;lcd.c: 188:     while( *str )
  1353  061E  0876               	movf	dispLCDstr@str,w
  1354  061F  0084               	movwf	4
  1355  0620  1383               	bcf	3,7	;select IRP bank0
  1356  0621  0800               	movf	0,w
  1357  0622  1D03               	btfss	3,2
  1358  0623  2E25               	goto	u521
  1359  0624  2E26               	goto	u520
  1360  0625                     u521:
  1361  0625  2E02               	goto	l1242
  1362  0626                     u520:
  1363  0626                     l112:
  1364  0626  0008               	return
  1365  0627                     __end_of_dispLCDstr:
  1366                           
  1367                           	psect	text5
  1368  0726                     __ptext5:	
  1369 ;; *************** function _dispLCD_init *****************
  1370 ;; Defined at:
  1371 ;;		line 150 in file "lcd.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         0       0       0       0       0
  1387 ;;      Temps:          1       0       0       0       0
  1388 ;;      Totals:         1       0       0       0       0
  1389 ;;Total ram usage:        1 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 2
  1392 ;; This function calls:
  1393 ;;		_delay
  1394 ;;		_dispLCD_instReg
  1395 ;;		_dispLCD_newChar
  1396 ;; This function is called by:
  1397 ;;		_main
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _dispLCD_init
  1403  0726                     _dispLCD_init:
  1404  0726                     l1208:	
  1405                           ;incstack = 0
  1406                           ; Regs used in _dispLCD_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1407                           
  1408                           
  1409                           ;lcd.c: 152:     delay(100);
  1410  0726  3064               	movlw	100
  1411  0727  00F0               	movwf	delay@t
  1412  0728  3000               	movlw	0
  1413  0729  00F1               	movwf	delay@t+1
  1414  072A  120A  118A  252A  120A  118A  	fcall	_delay
  1415  072F                     l1210:
  1416                           
  1417                           ;lcd.c: 153:     TRISDbits.TRISD0 = 0;
  1418  072F  1683               	bsf	3,5	;RP0=1, select bank1
  1419  0730  1303               	bcf	3,6	;RP1=0, select bank1
  1420  0731  1008               	bcf	8,0	;volatile
  1421  0732                     l1212:
  1422                           
  1423                           ;lcd.c: 154:     TRISDbits.TRISD1 = 0;
  1424  0732  1088               	bcf	8,1	;volatile
  1425  0733                     l1214:
  1426                           
  1427                           ;lcd.c: 155:     TRISDbits.TRISD2 = 0;
  1428  0733  1108               	bcf	8,2	;volatile
  1429  0734                     l1216:
  1430                           
  1431                           ;lcd.c: 156:     TRISDbits.TRISD3 = 0;
  1432  0734  1188               	bcf	8,3	;volatile
  1433  0735                     l1218:
  1434                           
  1435                           ;lcd.c: 157:     TRISDbits.TRISD4 = 0;
  1436  0735  1208               	bcf	8,4	;volatile
  1437  0736                     l1220:
  1438                           
  1439                           ;lcd.c: 158:     TRISDbits.TRISD5 = 0;
  1440  0736  1288               	bcf	8,5	;volatile
  1441  0737                     l1222:
  1442                           
  1443                           ;lcd.c: 159:     TRISDbits.TRISD6 = 1;
  1444  0737  1708               	bsf	8,6	;volatile
  1445  0738                     l1224:
  1446                           
  1447                           ;lcd.c: 160:     TRISDbits.TRISD7 = 1;
  1448  0738  1788               	bsf	8,7	;volatile
  1449                           
  1450                           ;lcd.c: 161:     delay(100);
  1451  0739  3064               	movlw	100
  1452  073A  00F0               	movwf	delay@t
  1453  073B  3000               	movlw	0
  1454  073C  00F1               	movwf	delay@t+1
  1455  073D  120A  118A  252A  120A  118A  	fcall	_delay
  1456  0742                     l1226:
  1457                           
  1458                           ;lcd.c: 162:     LCDbits.EN = 1;
  1459  0742  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0743  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0744  1688               	bsf	8,5	;volatile
  1462                           
  1463                           ;lcd.c: 163:     dispLCD_instReg( 0x20|0x00|0x08);
  1464  0745  3028               	movlw	40
  1465  0746  120A  118A  277A  120A  118A  	fcall	_dispLCD_instReg
  1466                           
  1467                           ;lcd.c: 164:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  1468  074B  300C               	movlw	12
  1469  074C  120A  118A  277A  120A  118A  	fcall	_dispLCD_instReg
  1470                           
  1471                           ;lcd.c: 165:     dispLCD_instReg( 0x01 );
  1472  0751  3001               	movlw	1
  1473  0752  120A  118A  277A  120A  118A  	fcall	_dispLCD_instReg
  1474                           
  1475                           ;lcd.c: 166:     dispLCD_instReg( 0x02 );
  1476  0757  3002               	movlw	2
  1477  0758  120A  118A  277A  120A  118A  	fcall	_dispLCD_instReg
  1478                           
  1479                           ;lcd.c: 167:     delay(100);
  1480  075D  3064               	movlw	100
  1481  075E  00F0               	movwf	delay@t
  1482  075F  3000               	movlw	0
  1483  0760  00F1               	movwf	delay@t+1
  1484  0761  120A  118A  252A  120A  118A  	fcall	_delay
  1485  0766                     l1228:
  1486                           
  1487                           ;lcd.c: 168:     dispLCD_newChar( 001, newChar_degree );
  1488  0766  3001               	movlw	(low ((_newChar_degree-__stringbase)| (0+32768)))& (0+255)
  1489  0767  00F7               	movwf	??_dispLCD_init
  1490  0768  0877               	movf	??_dispLCD_init,w
  1491  0769  00F3               	movwf	dispLCD_newChar@ptr
  1492  076A  3001               	movlw	1
  1493  076B  120A  118A  2654  120A  118A  	fcall	_dispLCD_newChar
  1494  0770                     l1230:
  1495                           
  1496                           ;lcd.c: 169:     delay(100);
  1497  0770  3064               	movlw	100
  1498  0771  00F0               	movwf	delay@t
  1499  0772  3000               	movlw	0
  1500  0773  00F1               	movwf	delay@t+1
  1501  0774  120A  118A  252A  120A  118A  	fcall	_delay
  1502  0779                     l99:
  1503  0779  0008               	return
  1504  077A                     __end_of_dispLCD_init:
  1505                           
  1506                           	psect	text6
  1507  0654                     __ptext6:	
  1508 ;; *************** function _dispLCD_newChar *****************
  1509 ;; Defined at:
  1510 ;;		line 134 in file "lcd.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  adrs            1    wreg     unsigned char 
  1513 ;;  ptr             1    3[COMMON] PTR const unsigned char 
  1514 ;;		 -> newChar_degree(8), 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  adrs            1    5[COMMON] unsigned char 
  1517 ;;  i               1    6[COMMON] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         1       0       0       0       0
  1528 ;;      Locals:         2       0       0       0       0
  1529 ;;      Temps:          1       0       0       0       0
  1530 ;;      Totals:         4       0       0       0       0
  1531 ;;Total ram usage:        4 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; Hardware stack levels required when called: 1
  1534 ;; This function calls:
  1535 ;;		_dispLCD_dataReg
  1536 ;;		_dispLCD_instReg
  1537 ;; This function is called by:
  1538 ;;		_dispLCD_init
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           
  1543                           ;psect for function _dispLCD_newChar
  1544  0654                     _dispLCD_newChar:
  1545                           
  1546                           ;incstack = 0
  1547                           ; Regs used in _dispLCD_newChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1548                           ;dispLCD_newChar@adrs stored from wreg
  1549  0654  00F5               	movwf	dispLCD_newChar@adrs
  1550  0655                     l1144:
  1551                           
  1552                           ;lcd.c: 134: void dispLCD_newChar( unsigned char adrs, const char * ptr );lcd.c: 135: {;
      +                          lcd.c: 136:     char i;;lcd.c: 137:     dispLCD_instReg( (0x40+(adrs<<3 & 0x3F)) );
  1553  0655  0875               	movf	dispLCD_newChar@adrs,w
  1554  0656  00F4               	movwf	??_dispLCD_newChar
  1555  0657  3002               	movlw	2
  1556  0658                     u435:
  1557  0658  1003               	clrc
  1558  0659  0DF4               	rlf	??_dispLCD_newChar,f
  1559  065A  3EFF               	addlw	-1
  1560  065B  1D03               	skipz
  1561  065C  2E58               	goto	u435
  1562  065D  1003               	clrc
  1563  065E  0D74               	rlf	??_dispLCD_newChar,w
  1564  065F  393F               	andlw	63
  1565  0660  3E40               	addlw	64
  1566  0661  120A  118A  277A  120A  118A  	fcall	_dispLCD_instReg
  1567  0666                     l1146:
  1568                           
  1569                           ;lcd.c: 138:     for( i=0; i<8; i++ )
  1570  0666  01F6               	clrf	dispLCD_newChar@i
  1571  0667                     l1152:
  1572                           
  1573                           ;lcd.c: 139:         dispLCD_dataReg( *(ptr+i) );
  1574  0667  0876               	movf	dispLCD_newChar@i,w
  1575  0668  0773               	addwf	dispLCD_newChar@ptr,w
  1576  0669  0084               	movwf	4
  1577  066A  120A  118A  201B  120A  118A  	fcall	stringdir
  1578  066F  120A  118A  2577  120A  118A  	fcall	_dispLCD_dataReg
  1579  0674                     l1154:
  1580  0674  3001               	movlw	1
  1581  0675  00F4               	movwf	??_dispLCD_newChar
  1582  0676  0874               	movf	??_dispLCD_newChar,w
  1583  0677  07F6               	addwf	dispLCD_newChar@i,f
  1584  0678                     l1156:
  1585  0678  3008               	movlw	8
  1586  0679  0276               	subwf	dispLCD_newChar@i,w
  1587  067A  1C03               	skipc
  1588  067B  2E7D               	goto	u441
  1589  067C  2E7E               	goto	u440
  1590  067D                     u441:
  1591  067D  2E67               	goto	l1152
  1592  067E                     u440:
  1593  067E                     l1158:
  1594                           
  1595                           ;lcd.c: 140:     dispLCD_instReg(0x01);
  1596  067E  3001               	movlw	1
  1597  067F  120A  118A  277A  120A  118A  	fcall	_dispLCD_instReg
  1598  0684                     l93:
  1599  0684  0008               	return
  1600  0685                     __end_of_dispLCD_newChar:
  1601                           
  1602                           	psect	text7
  1603  052A                     __ptext7:	
  1604 ;; *************** function _delay *****************
  1605 ;; Defined at:
  1606 ;;		line 12 in file "delay.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  t               2    0[COMMON] unsigned int 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         2       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0
  1622 ;;      Temps:          1       0       0       0       0
  1623 ;;      Totals:         3       0       0       0       0
  1624 ;;Total ram usage:        3 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_dispLCD_init
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _delay
  1635  052A                     _delay:
  1636  052A                     l1110:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _delay: [wreg+status,2+status,0]
  1639                           
  1640                           
  1641                           ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  1642  052A  2D38               	goto	l1114
  1643  052B                     l1112:
  1644                           
  1645                           ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));
  1646  052B  30C7               	movlw	199
  1647  052C  00F2               	movwf	??_delay
  1648  052D                     u637:
  1649  052D  2D2E               	nop2
  1650  052E  0BF2               	decfsz	??_delay,f
  1651  052F  2D2D               	goto	u637
  1652  0530  2D31               	nop2
  1653  0531  2D32               	nop2
  1654                           
  1655                           ;delay.c: 17:         --t;
  1656  0532  3001               	movlw	1
  1657  0533  02F0               	subwf	delay@t,f
  1658  0534  3000               	movlw	0
  1659  0535  1C03               	skipc
  1660  0536  03F1               	decf	delay@t+1,f
  1661  0537  02F1               	subwf	delay@t+1,f
  1662  0538                     l1114:
  1663                           
  1664                           ;delay.c: 14:     while( t )
  1665  0538  0870               	movf	delay@t,w
  1666  0539  0471               	iorwf	delay@t+1,w
  1667  053A  1D03               	btfss	3,2
  1668  053B  2D3D               	goto	u401
  1669  053C  2D3E               	goto	u400
  1670  053D                     u401:
  1671  053D  2D2B               	goto	l1112
  1672  053E                     u400:
  1673  053E                     l8:
  1674  053E  0008               	return
  1675  053F                     __end_of_delay:
  1676                           
  1677                           	psect	text8
  1678  0557                     __ptext8:	
  1679 ;; *************** function _dispLCD *****************
  1680 ;; Defined at:
  1681 ;;		line 173 in file "lcd.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  lin             1    6[COMMON] unsigned char 
  1684 ;;  col             1    7[COMMON] unsigned char 
  1685 ;;  str             1    8[COMMON] PTR const unsigned char 
  1686 ;;		 -> linha1(16), 
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         3       0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0
  1700 ;;      Temps:          1       0       0       0       0
  1701 ;;      Totals:         4       0       0       0       0
  1702 ;;Total ram usage:        4 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 2
  1705 ;; This function calls:
  1706 ;;		_dispLCD_dataReg
  1707 ;;		_dispLCD_lincol
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           
  1714                           ;psect for function _dispLCD
  1715  0557                     _dispLCD:
  1716  0557                     l1232:	
  1717                           ;incstack = 0
  1718                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1719                           
  1720                           
  1721                           ;lcd.c: 173: void dispLCD( unsigned char lin, unsigned char col, const char * str );lcd.
      +                          c: 174: {;lcd.c: 175:     dispLCD_lincol( lin, col );
  1722  0557  0877               	movf	dispLCD@col,w
  1723  0558  00F9               	movwf	??_dispLCD
  1724  0559  0879               	movf	??_dispLCD,w
  1725  055A  00F3               	movwf	dispLCD_lincol@col
  1726  055B  0876               	movf	dispLCD@lin,w
  1727  055C  120A  118A  2504  120A  118A  	fcall	_dispLCD_lincol
  1728                           
  1729                           ;lcd.c: 177:     while( *str )
  1730  0561  2D6E               	goto	l1238
  1731  0562                     l1234:
  1732                           
  1733                           ;lcd.c: 178:     {;lcd.c: 179:         dispLCD_dataReg( *str );
  1734  0562  0878               	movf	dispLCD@str,w
  1735  0563  0084               	movwf	4
  1736  0564  0800               	movf	0,w
  1737  0565  120A  118A  2577  120A  118A  	fcall	_dispLCD_dataReg
  1738  056A                     l1236:
  1739                           
  1740                           ;lcd.c: 180:         ++str;
  1741  056A  3001               	movlw	1
  1742  056B  00F9               	movwf	??_dispLCD
  1743  056C  0879               	movf	??_dispLCD,w
  1744  056D  07F8               	addwf	dispLCD@str,f
  1745  056E                     l1238:
  1746                           
  1747                           ;lcd.c: 177:     while( *str )
  1748  056E  0878               	movf	dispLCD@str,w
  1749  056F  0084               	movwf	4
  1750  0570  1383               	bcf	3,7	;select IRP bank0
  1751  0571  0800               	movf	0,w
  1752  0572  1D03               	btfss	3,2
  1753  0573  2D75               	goto	u501
  1754  0574  2D76               	goto	u500
  1755  0575                     u501:
  1756  0575  2D62               	goto	l1234
  1757  0576                     u500:
  1758  0576                     l105:
  1759  0576  0008               	return
  1760  0577                     __end_of_dispLCD:
  1761                           
  1762                           	psect	text9
  1763  0504                     __ptext9:	
  1764 ;; *************** function _dispLCD_lincol *****************
  1765 ;; Defined at:
  1766 ;;		line 128 in file "lcd.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  lin             1    wreg     unsigned char 
  1769 ;;  col             1    3[COMMON] unsigned char 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  lin             1    5[COMMON] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         1       0       0       0       0
  1782 ;;      Locals:         1       0       0       0       0
  1783 ;;      Temps:          1       0       0       0       0
  1784 ;;      Totals:         3       0       0       0       0
  1785 ;;Total ram usage:        3 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 1
  1788 ;; This function calls:
  1789 ;;		_dispLCD_instReg
  1790 ;; This function is called by:
  1791 ;;		_dispLCD
  1792 ;;		_dispLCDstr
  1793 ;;		_dispLCD_putChar
  1794 ;;		_dispLCD_num
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           
  1799                           ;psect for function _dispLCD_lincol
  1800  0504                     _dispLCD_lincol:
  1801                           
  1802                           ;incstack = 0
  1803                           ; Regs used in _dispLCD_lincol: [wreg+status,2+status,0+pclath+cstack]
  1804                           ;dispLCD_lincol@lin stored from wreg
  1805  0504  00F5               	movwf	dispLCD_lincol@lin
  1806  0505                     l1142:
  1807                           
  1808                           ;lcd.c: 128: void dispLCD_lincol( unsigned char lin, unsigned char col);lcd.c: 129: {;lc
      +                          d.c: 130:     dispLCD_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  1809  0505  0875               	movf	dispLCD_lincol@lin,w
  1810  0506  00F4               	movwf	??_dispLCD_lincol
  1811  0507  3006               	movlw	6
  1812  0508                     u425:
  1813  0508  1003               	clrc
  1814  0509  0DF4               	rlf	??_dispLCD_lincol,f
  1815  050A  3EFF               	addlw	-1
  1816  050B  1D03               	skipz
  1817  050C  2D08               	goto	u425
  1818  050D  0873               	movf	dispLCD_lincol@col,w
  1819  050E  0774               	addwf	??_dispLCD_lincol,w
  1820  050F  397F               	andlw	127
  1821  0510  3E80               	addlw	128
  1822  0511  120A  118A  277A  120A  118A  	fcall	_dispLCD_instReg
  1823  0516                     l88:
  1824  0516  0008               	return
  1825  0517                     __end_of_dispLCD_lincol:
  1826                           
  1827                           	psect	text10
  1828  077A                     __ptext10:	
  1829 ;; *************** function _dispLCD_instReg *****************
  1830 ;; Defined at:
  1831 ;;		line 79 in file "lcd.c"
  1832 ;; Parameters:    Size  Location     Type
  1833 ;;  i               1    wreg     unsigned char 
  1834 ;; Auto vars:     Size  Location     Type
  1835 ;;  i               1    2[COMMON] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1845 ;;      Params:         0       0       0       0       0
  1846 ;;      Locals:         1       0       0       0       0
  1847 ;;      Temps:          2       0       0       0       0
  1848 ;;      Totals:         3       0       0       0       0
  1849 ;;Total ram usage:        3 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; This function calls:
  1852 ;;		Nothing
  1853 ;; This function is called by:
  1854 ;;		_dispLCD_lincol
  1855 ;;		_dispLCD_newChar
  1856 ;;		_dispLCD_init
  1857 ;;		_dispLCD_clr
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           
  1862                           ;psect for function _dispLCD_instReg
  1863  077A                     _dispLCD_instReg:
  1864                           
  1865                           ;incstack = 0
  1866                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  1867                           ;dispLCD_instReg@i stored from wreg
  1868  077A  00F2               	movwf	dispLCD_instReg@i
  1869  077B                     l1050:
  1870                           
  1871                           ;lcd.c: 79: void dispLCD_instReg( unsigned char i );lcd.c: 80: {;lcd.c: 81:     LCDbits.
      +                          RS = 0;
  1872  077B  1283               	bcf	3,5	;RP0=0, select bank0
  1873  077C  1303               	bcf	3,6	;RP1=0, select bank0
  1874  077D  1208               	bcf	8,4	;volatile
  1875  077E                     l1052:
  1876                           
  1877                           ;lcd.c: 82:     LCDbits.BUS = (i>>4);
  1878  077E  0872               	movf	dispLCD_instReg@i,w
  1879  077F  00F0               	movwf	??_dispLCD_instReg
  1880  0780  3004               	movlw	4
  1881  0781                     u325:
  1882  0781  1003               	clrc
  1883  0782  0CF0               	rrf	??_dispLCD_instReg,f
  1884  0783  3EFF               	addlw	-1
  1885  0784  1D03               	skipz
  1886  0785  2F81               	goto	u325
  1887  0786  0808               	movf	8,w	;volatile
  1888  0787  0670               	xorwf	??_dispLCD_instReg,w
  1889  0788  39F0               	andlw	-16
  1890  0789  0670               	xorwf	??_dispLCD_instReg,w
  1891  078A  0088               	movwf	8	;volatile
  1892  078B                     l1054:
  1893                           
  1894                           ;lcd.c: 84:     LCDbits.EN = 0;
  1895  078B  1288               	bcf	8,5	;volatile
  1896                           
  1897                           ;lcd.c: 85:     if( i == 0x01 || i == 0x02 )
  1898  078C  0372               	decf	dispLCD_instReg@i,w
  1899  078D  1903               	btfsc	3,2
  1900  078E  2F90               	goto	u331
  1901  078F  2F91               	goto	u330
  1902  0790                     u331:
  1903  0790  2F97               	goto	l1058
  1904  0791                     u330:
  1905  0791                     l1056:
  1906  0791  3002               	movlw	2
  1907  0792  0672               	xorwf	dispLCD_instReg@i,w
  1908  0793  1D03               	btfss	3,2
  1909  0794  2F96               	goto	u341
  1910  0795  2F97               	goto	u340
  1911  0796                     u341:
  1912  0796  2FA1               	goto	l1060
  1913  0797                     u340:
  1914  0797                     l1058:
  1915                           
  1916                           ;lcd.c: 86:         _delay((unsigned long)((2)*(4000000/4000.0)));
  1917  0797  3003               	movlw	3
  1918  0798  00F1               	movwf	??_dispLCD_instReg+1
  1919  0799  3097               	movlw	151
  1920  079A  00F0               	movwf	??_dispLCD_instReg
  1921  079B                     u647:
  1922  079B  0BF0               	decfsz	??_dispLCD_instReg,f
  1923  079C  2F9B               	goto	u647
  1924  079D  0BF1               	decfsz	??_dispLCD_instReg+1,f
  1925  079E  2F9B               	goto	u647
  1926  079F  2FA0               	nop2
  1927  07A0  2FA5               	goto	l1062
  1928  07A1                     l1060:
  1929                           
  1930                           ;lcd.c: 88:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1931  07A1  300D               	movlw	13
  1932  07A2  00F0               	movwf	??_dispLCD_instReg
  1933  07A3                     u657:
  1934  07A3  0BF0               	decfsz	??_dispLCD_instReg,f
  1935  07A4  2FA3               	goto	u657
  1936  07A5                     l1062:
  1937                           
  1938                           ;lcd.c: 89:     LCDbits.EN = 1;
  1939  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1940  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1941  07A7  1688               	bsf	8,5	;volatile
  1942  07A8                     l1064:
  1943                           
  1944                           ;lcd.c: 92:     if( (i & 0xF0) == (0x20 | 0x00) )
  1945  07A8  30F0               	movlw	240
  1946  07A9  0572               	andwf	dispLCD_instReg@i,w
  1947  07AA  00F0               	movwf	??_dispLCD_instReg
  1948  07AB  3020               	movlw	32
  1949  07AC  0670               	xorwf	??_dispLCD_instReg,w
  1950  07AD  1D03               	btfss	3,2
  1951  07AE  2FB0               	goto	u351
  1952  07AF  2FB1               	goto	u350
  1953  07B0                     u351:
  1954  07B0  2FC7               	goto	l1076
  1955  07B1                     u350:
  1956  07B1                     l1066:
  1957                           
  1958                           ;lcd.c: 93:     {;lcd.c: 94:         LCDbits.RS = 0;
  1959  07B1  1208               	bcf	8,4	;volatile
  1960  07B2                     l1068:
  1961                           
  1962                           ;lcd.c: 95:         LCDbits.BUS = i>>4;
  1963  07B2  0872               	movf	dispLCD_instReg@i,w
  1964  07B3  00F0               	movwf	??_dispLCD_instReg
  1965  07B4  3004               	movlw	4
  1966  07B5                     u365:
  1967  07B5  1003               	clrc
  1968  07B6  0CF0               	rrf	??_dispLCD_instReg,f
  1969  07B7  3EFF               	addlw	-1
  1970  07B8  1D03               	skipz
  1971  07B9  2FB5               	goto	u365
  1972  07BA  0808               	movf	8,w	;volatile
  1973  07BB  0670               	xorwf	??_dispLCD_instReg,w
  1974  07BC  39F0               	andlw	-16
  1975  07BD  0670               	xorwf	??_dispLCD_instReg,w
  1976  07BE  0088               	movwf	8	;volatile
  1977  07BF                     l1070:
  1978                           
  1979                           ;lcd.c: 96:         LCDbits.EN = 0;
  1980  07BF  1288               	bcf	8,5	;volatile
  1981  07C0                     l1072:
  1982                           
  1983                           ;lcd.c: 97:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  1984  07C0  300D               	movlw	13
  1985  07C1  00F0               	movwf	??_dispLCD_instReg
  1986  07C2                     u667:
  1987  07C2  0BF0               	decfsz	??_dispLCD_instReg,f
  1988  07C3  2FC2               	goto	u667
  1989  07C4                     l1074:
  1990                           
  1991                           ;lcd.c: 98:         LCDbits.EN = 1;
  1992  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1993  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1994  07C6  1688               	bsf	8,5	;volatile
  1995  07C7                     l1076:
  1996                           
  1997                           ;lcd.c: 101:     LCDbits.RS = 0;
  1998  07C7  1208               	bcf	8,4	;volatile
  1999  07C8                     l1078:
  2000                           
  2001                           ;lcd.c: 102:     LCDbits.BUS = i & 0x0F;
  2002  07C8  300F               	movlw	15
  2003  07C9  0572               	andwf	dispLCD_instReg@i,w
  2004  07CA  00F0               	movwf	??_dispLCD_instReg
  2005  07CB  0808               	movf	8,w	;volatile
  2006  07CC  0670               	xorwf	??_dispLCD_instReg,w
  2007  07CD  39F0               	andlw	-16
  2008  07CE  0670               	xorwf	??_dispLCD_instReg,w
  2009  07CF  0088               	movwf	8	;volatile
  2010  07D0                     l1080:
  2011                           
  2012                           ;lcd.c: 103:     LCDbits.EN = 0;
  2013  07D0  1288               	bcf	8,5	;volatile
  2014  07D1                     l1082:
  2015                           
  2016                           ;lcd.c: 104:     if( i == 0x01 || i == 0x02 )
  2017  07D1  0372               	decf	dispLCD_instReg@i,w
  2018  07D2  1903               	btfsc	3,2
  2019  07D3  2FD5               	goto	u371
  2020  07D4  2FD6               	goto	u370
  2021  07D5                     u371:
  2022  07D5  2FDC               	goto	l1086
  2023  07D6                     u370:
  2024  07D6                     l1084:
  2025  07D6  3002               	movlw	2
  2026  07D7  0672               	xorwf	dispLCD_instReg@i,w
  2027  07D8  1D03               	btfss	3,2
  2028  07D9  2FDB               	goto	u381
  2029  07DA  2FDC               	goto	u380
  2030  07DB                     u381:
  2031  07DB  2FE6               	goto	l1088
  2032  07DC                     u380:
  2033  07DC                     l1086:
  2034                           
  2035                           ;lcd.c: 105:         _delay((unsigned long)((2)*(4000000/4000.0)));
  2036  07DC  3003               	movlw	3
  2037  07DD  00F1               	movwf	??_dispLCD_instReg+1
  2038  07DE  3097               	movlw	151
  2039  07DF  00F0               	movwf	??_dispLCD_instReg
  2040  07E0                     u677:
  2041  07E0  0BF0               	decfsz	??_dispLCD_instReg,f
  2042  07E1  2FE0               	goto	u677
  2043  07E2  0BF1               	decfsz	??_dispLCD_instReg+1,f
  2044  07E3  2FE0               	goto	u677
  2045  07E4  2FE5               	nop2
  2046  07E5  2FEA               	goto	l1090
  2047  07E6                     l1088:
  2048                           
  2049                           ;lcd.c: 107:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  2050  07E6  300D               	movlw	13
  2051  07E7  00F0               	movwf	??_dispLCD_instReg
  2052  07E8                     u687:
  2053  07E8  0BF0               	decfsz	??_dispLCD_instReg,f
  2054  07E9  2FE8               	goto	u687
  2055  07EA                     l1090:
  2056                           
  2057                           ;lcd.c: 108:     LCDbits.EN = 1;
  2058  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  2059  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  2060  07EC  1688               	bsf	8,5	;volatile
  2061  07ED                     l82:
  2062  07ED  0008               	return
  2063  07EE                     __end_of_dispLCD_instReg:
  2064                           
  2065                           	psect	text11
  2066  0577                     __ptext11:	
  2067 ;; *************** function _dispLCD_dataReg *****************
  2068 ;; Defined at:
  2069 ;;		line 112 in file "lcd.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  d               1    wreg     unsigned char 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;  d               1    1[COMMON] unsigned char 
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         1       0       0       0       0
  2085 ;;      Temps:          1       0       0       0       0
  2086 ;;      Totals:         2       0       0       0       0
  2087 ;;Total ram usage:        2 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_dispLCD_newChar
  2093 ;;		_dispLCD
  2094 ;;		_dispLCDstr
  2095 ;;		_dispLCD_putChar
  2096 ;;		_dispLCD_num
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _dispLCD_dataReg
  2102  0577                     _dispLCD_dataReg:
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
  2106                           ;dispLCD_dataReg@d stored from wreg
  2107  0577  00F1               	movwf	dispLCD_dataReg@d
  2108  0578                     l1092:
  2109                           
  2110                           ;lcd.c: 112: void dispLCD_dataReg( unsigned char d );lcd.c: 113: {;lcd.c: 114:     LCDbi
      +                          ts.RS = 1;
  2111  0578  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0579  1303               	bcf	3,6	;RP1=0, select bank0
  2113  057A  1608               	bsf	8,4	;volatile
  2114  057B                     l1094:
  2115                           
  2116                           ;lcd.c: 115:     LCDbits.BUS = d >> 4;
  2117  057B  0871               	movf	dispLCD_dataReg@d,w
  2118  057C  00F0               	movwf	??_dispLCD_dataReg
  2119  057D  3004               	movlw	4
  2120  057E                     u395:
  2121  057E  1003               	clrc
  2122  057F  0CF0               	rrf	??_dispLCD_dataReg,f
  2123  0580  3EFF               	addlw	-1
  2124  0581  1D03               	skipz
  2125  0582  2D7E               	goto	u395
  2126  0583  0808               	movf	8,w	;volatile
  2127  0584  0670               	xorwf	??_dispLCD_dataReg,w
  2128  0585  39F0               	andlw	-16
  2129  0586  0670               	xorwf	??_dispLCD_dataReg,w
  2130  0587  0088               	movwf	8	;volatile
  2131  0588                     l1096:
  2132                           
  2133                           ;lcd.c: 116:     LCDbits.EN = 0;
  2134  0588  1288               	bcf	8,5	;volatile
  2135  0589                     l1098:
  2136                           
  2137                           ;lcd.c: 117:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2138  0589  300D               	movlw	13
  2139  058A  00F0               	movwf	??_dispLCD_dataReg
  2140  058B                     u697:
  2141  058B  0BF0               	decfsz	??_dispLCD_dataReg,f
  2142  058C  2D8B               	goto	u697
  2143  058D                     l1100:
  2144                           
  2145                           ;lcd.c: 118:     LCDbits.EN = 1;
  2146  058D  1283               	bcf	3,5	;RP0=0, select bank0
  2147  058E  1303               	bcf	3,6	;RP1=0, select bank0
  2148  058F  1688               	bsf	8,5	;volatile
  2149  0590                     l1102:
  2150                           
  2151                           ;lcd.c: 120:     LCDbits.RS = 1;
  2152  0590  1608               	bsf	8,4	;volatile
  2153  0591                     l1104:
  2154                           
  2155                           ;lcd.c: 121:     LCDbits.BUS = d & 0x0F;
  2156  0591  300F               	movlw	15
  2157  0592  0571               	andwf	dispLCD_dataReg@d,w
  2158  0593  00F0               	movwf	??_dispLCD_dataReg
  2159  0594  0808               	movf	8,w	;volatile
  2160  0595  0670               	xorwf	??_dispLCD_dataReg,w
  2161  0596  39F0               	andlw	-16
  2162  0597  0670               	xorwf	??_dispLCD_dataReg,w
  2163  0598  0088               	movwf	8	;volatile
  2164  0599                     l1106:
  2165                           
  2166                           ;lcd.c: 122:     LCDbits.EN = 0;
  2167  0599  1288               	bcf	8,5	;volatile
  2168                           
  2169                           ;lcd.c: 123:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2170  059A  300D               	movlw	13
  2171  059B  00F0               	movwf	??_dispLCD_dataReg
  2172  059C                     u707:
  2173  059C  0BF0               	decfsz	??_dispLCD_dataReg,f
  2174  059D  2D9C               	goto	u707
  2175  059E                     l1108:
  2176                           
  2177                           ;lcd.c: 124:     LCDbits.EN = 1;
  2178  059E  1283               	bcf	3,5	;RP0=0, select bank0
  2179  059F  1303               	bcf	3,6	;RP1=0, select bank0
  2180  05A0  1688               	bsf	8,5	;volatile
  2181  05A1                     l85:
  2182  05A1  0008               	return
  2183  05A2                     __end_of_dispLCD_dataReg:
  2184                           
  2185                           	psect	text12
  2186  05A2                     __ptext12:	
  2187 ;; *************** function _buscar_receita *****************
  2188 ;; Defined at:
  2189 ;;		line 55 in file "eeprom.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  adrs            1    4[COMMON] unsigned char 
  2192 ;;  data            1    5[COMMON] PTR unsigned char 
  2193 ;;		 -> linha0(16), 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  i               1   10[COMMON] unsigned char 
  2196 ;;  aux             2    8[COMMON] int 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         2       0       0       0       0
  2207 ;;      Locals:         3       0       0       0       0
  2208 ;;      Temps:          2       0       0       0       0
  2209 ;;      Totals:         7       0       0       0       0
  2210 ;;Total ram usage:        7 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 1
  2213 ;; This function calls:
  2214 ;;		_EEPROM_read
  2215 ;;		_end_receita
  2216 ;; This function is called by:
  2217 ;;		_main
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           
  2222                           ;psect for function _buscar_receita
  2223  05A2                     _buscar_receita:
  2224  05A2                     l1174:	
  2225                           ;incstack = 0
  2226                           ; Regs used in _buscar_receita: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2227                           
  2228                           
  2229                           ;eeprom.c: 55: void buscar_receita (char adrs, unsigned char * data );eeprom.c: 56: {;ee
      +                          prom.c: 57:     int aux;;eeprom.c: 58:     aux = end_receita(adrs);
  2230  05A2  0874               	movf	buscar_receita@adrs,w
  2231  05A3  00F6               	movwf	??_buscar_receita
  2232  05A4  01F7               	clrf	??_buscar_receita+1
  2233  05A5  0876               	movf	??_buscar_receita,w
  2234  05A6  00F0               	movwf	end_receita@x
  2235  05A7  0877               	movf	??_buscar_receita+1,w
  2236  05A8  00F1               	movwf	end_receita@x+1
  2237  05A9  120A  118A  24F2  120A  118A  	fcall	_end_receita
  2238  05AE  0871               	movf	?_end_receita+1,w
  2239  05AF  00F9               	movwf	buscar_receita@aux+1
  2240  05B0  0870               	movf	?_end_receita,w
  2241  05B1  00F8               	movwf	buscar_receita@aux
  2242  05B2                     l1176:
  2243                           
  2244                           ;eeprom.c: 59:     for( char i=0; i<16; i++ )
  2245  05B2  01FA               	clrf	buscar_receita@i
  2246  05B3                     l1182:
  2247                           
  2248                           ;eeprom.c: 60:        *(data+i) = EEPROM_read(aux+i);
  2249  05B3  0878               	movf	buscar_receita@aux,w
  2250  05B4  077A               	addwf	buscar_receita@i,w
  2251  05B5  120A  118A  24E4  120A  118A  	fcall	_EEPROM_read
  2252  05BA  00F6               	movwf	??_buscar_receita
  2253  05BB  087A               	movf	buscar_receita@i,w
  2254  05BC  0775               	addwf	buscar_receita@data,w
  2255  05BD  00F7               	movwf	??_buscar_receita+1
  2256  05BE  0877               	movf	??_buscar_receita+1,w
  2257  05BF  0084               	movwf	4
  2258  05C0  0876               	movf	??_buscar_receita,w
  2259  05C1  1383               	bcf	3,7	;select IRP bank0
  2260  05C2  0080               	movwf	0
  2261  05C3                     l1184:
  2262  05C3  3001               	movlw	1
  2263  05C4  00F6               	movwf	??_buscar_receita
  2264  05C5  0876               	movf	??_buscar_receita,w
  2265  05C6  07FA               	addwf	buscar_receita@i,f
  2266  05C7                     l1186:
  2267  05C7  3010               	movlw	16
  2268  05C8  027A               	subwf	buscar_receita@i,w
  2269  05C9  1C03               	skipc
  2270  05CA  2DCC               	goto	u461
  2271  05CB  2DCD               	goto	u460
  2272  05CC                     u461:
  2273  05CC  2DB3               	goto	l1182
  2274  05CD                     u460:
  2275  05CD                     l42:
  2276  05CD  0008               	return
  2277  05CE                     __end_of_buscar_receita:
  2278                           
  2279                           	psect	text13
  2280  04F2                     __ptext13:	
  2281 ;; *************** function _end_receita *****************
  2282 ;; Defined at:
  2283 ;;		line 41 in file "eeprom.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  x               2    0[COMMON] int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;		None
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  2    0[COMMON] int 
  2290 ;; Registers used:
  2291 ;;		wreg
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2297 ;;      Params:         2       0       0       0       0
  2298 ;;      Locals:         0       0       0       0       0
  2299 ;;      Temps:          2       0       0       0       0
  2300 ;;      Totals:         4       0       0       0       0
  2301 ;;Total ram usage:        4 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; This function calls:
  2304 ;;		Nothing
  2305 ;; This function is called by:
  2306 ;;		_salvar_receita
  2307 ;;		_buscar_receita
  2308 ;;		_receita_livre
  2309 ;;		_deletar_receita
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _end_receita
  2315  04F2                     _end_receita:
  2316  04F2                     l1138:	
  2317                           ;incstack = 0
  2318                           ; Regs used in _end_receita: [wreg]
  2319                           
  2320                           
  2321                           ;eeprom.c: 41: int end_receita (int x);eeprom.c: 42: {;eeprom.c: 43:     return(x*16);
  2322  04F2  0871               	movf	end_receita@x+1,w
  2323  04F3  00F3               	movwf	??_end_receita+1
  2324  04F4  0870               	movf	end_receita@x,w
  2325  04F5  00F2               	movwf	??_end_receita
  2326  04F6  0EF2               	swapf	??_end_receita,f
  2327  04F7  0EF3               	swapf	??_end_receita+1,f
  2328  04F8  30F0               	movlw	240
  2329  04F9  05F3               	andwf	??_end_receita+1,f
  2330  04FA  0872               	movf	??_end_receita,w
  2331  04FB  390F               	andlw	15
  2332  04FC  04F3               	iorwf	??_end_receita+1,f
  2333  04FD  30F0               	movlw	240
  2334  04FE  05F2               	andwf	??_end_receita,f
  2335  04FF  0872               	movf	??_end_receita,w
  2336  0500  00F0               	movwf	?_end_receita
  2337  0501  0873               	movf	??_end_receita+1,w
  2338  0502  00F1               	movwf	?_end_receita+1
  2339  0503                     l32:
  2340  0503  0008               	return
  2341  0504                     __end_of_end_receita:
  2342                           
  2343                           	psect	text14
  2344  04E4                     __ptext14:	
  2345 ;; *************** function _EEPROM_read *****************
  2346 ;; Defined at:
  2347 ;;		line 14 in file "eeprom.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  addr            1    wreg     unsigned char 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  addr            1    0[COMMON] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      unsigned char 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         0       0       0       0       0
  2362 ;;      Locals:         1       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0
  2364 ;;      Totals:         1       0       0       0       0
  2365 ;;Total ram usage:        1 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_buscar_receita
  2371 ;;		_receita_livre
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           
  2376                           ;psect for function _EEPROM_read
  2377  04E4                     _EEPROM_read:
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _EEPROM_read: [wreg+status,2]
  2381                           ;EEPROM_read@addr stored from wreg
  2382  04E4  00F0               	movwf	EEPROM_read@addr
  2383  04E5                     l1116:
  2384                           
  2385                           ;eeprom.c: 14: char EEPROM_read( unsigned char addr );eeprom.c: 15: {;eeprom.c: 16:     
      +                          EEADRH = 0;
  2386  04E5  1283               	bcf	3,5	;RP0=0, select bank2
  2387  04E6  1703               	bsf	3,6	;RP1=1, select bank2
  2388  04E7  018F               	clrf	15	;volatile
  2389  04E8                     l1118:
  2390                           
  2391                           ;eeprom.c: 17:     EEADR = addr;
  2392  04E8  0870               	movf	EEPROM_read@addr,w
  2393  04E9  008D               	movwf	13	;volatile
  2394  04EA                     l1120:
  2395                           
  2396                           ;eeprom.c: 18:     EECON1bits.EEPGD = 0;
  2397  04EA  1683               	bsf	3,5	;RP0=1, select bank3
  2398  04EB  1703               	bsf	3,6	;RP1=1, select bank3
  2399  04EC  138C               	bcf	12,7	;volsfr
  2400  04ED                     l1122:
  2401                           
  2402                           ;eeprom.c: 19:     EECON1bits.RD = 1;
  2403  04ED  140C               	bsf	12,0	;volsfr
  2404  04EE                     l1124:
  2405                           
  2406                           ;eeprom.c: 20:     return( EEDAT );
  2407  04EE  1283               	bcf	3,5	;RP0=0, select bank2
  2408  04EF  1703               	bsf	3,6	;RP1=1, select bank2
  2409  04F0  080C               	movf	12,w	;volatile
  2410  04F1                     l23:
  2411  04F1  0008               	return
  2412  04F2                     __end_of_EEPROM_read:
  2413  000C                     
  2414                           	psect	functab
  2415  0003                     __pfunctab:
  2416  0003                     __fptable:
  2417  0003                     fptable:
  2418  0003  00FF               	movwf	(btemp+1)& (0+127)
  2419  0004  3000               	movlw	high fptable
  2420  0005  008A               	movwf	10
  2421  0006  087F               	movf	(btemp+1)& (0+127),w
  2422  0007  0782               	addwf	2,f
  2423  0008                     fpbase:
  2424  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2425  0009                     fp__buscar_receita:
  2426  0009  120A  118A  2DA2   	ljmp	_buscar_receita
  2427  000C                     fp__dispLCD:
  2428  000C  120A  118A  2D57   	ljmp	_dispLCD
  2429  000F                     fp__dispLCD_init:
  2430  000F  120A  118A  2F26   	ljmp	_dispLCD_init
  2431  0012                     fp__dispLCDstr:
  2432  0012  120A  118A  2DFA   	ljmp	_dispLCDstr
  2433  0015                     fp__receita_livre:
  2434  0015  120A  118A  2ED4   	ljmp	_receita_livre
  2435  0018                     fp__salvar_receita:
  2436  0018  120A  118A  2E27   	ljmp	_salvar_receita
  2437  001B                     __end_of__fptable:
  2438  007E                     btemp	set	126	;btemp
  2439  007E                     wtemp0	set	126
  2440                           
  2441                           	psect	config
  2442                           
  2443                           ;Config register CONFIG1 @ 0x2007
  2444                           ;	Oscillator Selection bits
  2445                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2446                           ;	Watchdog Timer Enable bit
  2447                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2448                           ;	Power-up Timer Enable bit
  2449                           ;	PWRTE = OFF, PWRT disabled
  2450                           ;	RE3/MCLR pin function select bit
  2451                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2452                           ;	Code Protection bit
  2453                           ;	CP = OFF, Program memory code protection is disabled
  2454                           ;	Data Code Protection bit
  2455                           ;	CPD = OFF, Data memory code protection is disabled
  2456                           ;	Brown Out Reset Selection bits
  2457                           ;	BOREN = OFF, BOR disabled
  2458                           ;	Internal External Switchover bit
  2459                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2460                           ;	Fail-Safe Clock Monitor Enabled bit
  2461                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2462                           ;	Low Voltage Programming Enable bit
  2463                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2464                           ;	In-Circuit Debugger Mode bit
  2465                           ;	DEBUG = 0x1, unprogrammed default
  2466  2007                     	org	8199
  2467  2007  20D4               	dw	8404
  2468                           
  2469                           ;Config register CONFIG2 @ 0x2008
  2470                           ;	Brown-out Reset Selection bit
  2471                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2472                           ;	Flash Program Memory Self Write Enable bits
  2473                           ;	WRT = OFF, Write protection off
  2474  2008                     	org	8200
  2475  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    8
    Data        44
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    S225$2$2	PTR const unsigned char  size(1) Largest target is 16
		 -> linha1(BANK0[16]), 

    S262$3$0	PTR unsigned char  size(1) Largest target is 16
		 -> linha1(BANK0[16]), 

    S225$1$0	PTR const unsigned char  size(1) Largest target is 16
		 -> linha0(BANK0[16]), 

    S262$1$1	PTR unsigned char  size(1) Largest target is 16
		 -> linha0(BANK0[16]), 

    S262$0$1	PTR unsigned char  size(1) Largest target is 16
		 -> linha0(BANK0[16]), 

    S262$formatar	PTR FTN()void  size(1) Largest target is 1
		 -> formatar_receitas(), 

    receita.formatar	PTR FTN()void  size(1) Largest target is 1
		 -> formatar_receitas(), 

    S262$livre	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> receita_livre(), 

    receita.livre	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> receita_livre(), 

    S262$deletar	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> deletar_receita(), 

    receita.deletar	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> deletar_receita(), 

    S262$buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> buscar_receita(), 

    receita.buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> buscar_receita(), 

    S262$salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> salvar_receita(), 

    receita.salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> salvar_receita(), 

    S225$B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    lcd.B1	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B1(), 

    S225$B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    lcd.B0	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> dispLCD_B0(), 

    S225$clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    lcd.clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    S225$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    lcd.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    S225$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    lcd.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    S225$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    lcd.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCDstr(), 

    S225$init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    lcd.init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    dispLCDstr@str	PTR const unsigned char  size(1) Largest target is 16
		 -> linha0(BANK0[16]), 

    dispLCD@str	PTR const unsigned char  size(1) Largest target is 16
		 -> linha1(BANK0[16]), 

    dispLCD_newChar@ptr	PTR const unsigned char  size(1) Largest target is 8
		 -> newChar_degree(CODE[8]), 

    receita_livre@rec	PTR unsigned char  size(1) Largest target is 16
		 -> linha1(BANK0[16]), 

    buscar_receita@data	PTR unsigned char  size(1) Largest target is 16
		 -> linha0(BANK0[16]), 

    salvar_receita@data	PTR unsigned char  size(1) Largest target is 16
		 -> linha0(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_buscar_receita
    _main->_receita_livre
    _main->_salvar_receita
    _salvar_receita->_end_receita
    _receita_livre->_end_receita
    _dispLCDstr->_dispLCD_lincol
    _dispLCD_init->_dispLCD_newChar
    _dispLCD_newChar->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg
    _buscar_receita->_end_receita

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4685
                                             11 COMMON     1     1      0
                     _buscar_receita *
                            _dispLCD *
                       _dispLCD_init *
                         _dispLCDstr *
                      _receita_livre *
                     _salvar_receita *
 ---------------------------------------------------------------------------------
 (1) _salvar_receita                                       7     5      2     861
                                              4 COMMON     7     5      2
                       _EEPROM_write
                        _end_receita
 ---------------------------------------------------------------------------------
 (2) _EEPROM_write                                         2     1      1     272
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _receita_livre                                        7     6      1     646
                                              4 COMMON     7     6      1
                        _EEPROM_read
                        _end_receita
 ---------------------------------------------------------------------------------
 (1) _dispLCDstr                                           2     1      1     764
                                              6 COMMON     2     1      1
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         1     1      0     911
                                              7 COMMON     1     1      0
                              _delay
                    _dispLCD_instReg
                    _dispLCD_newChar
 ---------------------------------------------------------------------------------
 (2) _dispLCD_newChar                                      4     3      1     408
                                              3 COMMON     4     3      1
                    _dispLCD_dataReg
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     327
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              4     1      3     892
                                              6 COMMON     4     1      3
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (2) _dispLCD_lincol                                       3     2      1     600
                                              3 COMMON     3     2      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (3) _dispLCD_instReg                                      3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_dataReg                                      2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _buscar_receita                                       7     5      2     611
                                              4 COMMON     7     5      2
                        _EEPROM_read
                        _end_receita
 ---------------------------------------------------------------------------------
 (2) _end_receita                                          4     2      2     326
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_read                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _buscar_receita *
     _EEPROM_read
     _end_receita
   _dispLCD *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_init *
     _delay
     _dispLCD_instReg
     _dispLCD_newChar
       _dispLCD_dataReg
       _dispLCD_instReg
   _dispLCDstr *
     _dispLCD_dataReg
     _dispLCD_lincol
   _receita_livre *
     _EEPROM_read
     _end_receita
   _salvar_receita *
     _EEPROM_write
     _end_receita

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      38      12        0.0%
ABS                  0      0      38       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Sep 25 00:52:16 2021

                       l8 053E                         pc 0002                        l23 04F1  
                      l32 0503                        l42 05CD                        l26 0550  
                      l28 0554                        l29 0556                        l37 0653  
                      l55 0725                        l82 07ED                        l85 05A1  
                      l93 0684                        l88 0516                        l99 0779  
 __end_of_dispLCD_dataReg 05A2                        fsr 0004                       l112 0626  
                     l105 0576                       l108 061E                       l175 06D0  
                     l176 06D0                       u400 053E                       u401 053D  
                     u330 0791                       u410 0554                       u331 0790  
                     u411 0553                       u340 0797                       u500 0576  
                     u341 0796                       u325 0781                       u501 0575  
                     u350 07B1                       u510 060A                       u351 07B0  
                     u511 0609                       u440 067E                       u520 0626  
                     u425 0508                       u441 067D                       u521 0625  
                     u370 07D6                       u450 0653                       u371 07D5  
                     u435 0658                       u451 0652                       u460 05CD  
                     u380 07DC                       u461 05CC                       u381 07DB  
                     u365 07B5                       u470 06EE                       u471 06ED  
                     u480 06FB                       u481 06FA                       u490 0725  
                     u707 059C                       u395 057E                       u491 0724  
                     u637 052D                       u485 06F7                       u647 079B  
                     u495 0721                       u657 07A3                       u667 07C2  
                     u677 07E0                       u687 07E8                       u697 058B  
 __end_of_dispLCD_newChar 0685                       _lcd 0020   __size_of_buscar_receita 002C  
                     fsr0 0004         fp__buscar_receita 0009                       indf 0000  
 __end_of_dispLCD_instReg 07EE                      l1100 058D                      l1102 0590  
                    l1110 052A                      l1120 04EA                      l1104 0591  
                    l1112 052B                      l1200 06FB                      l1122 04ED  
                    l1106 0599                      l1050 077B                      l1114 0538  
                    l1210 072F                      l1202 0707                      l1130 0541  
                    l1124 04EE                      l1116 04E5                      l1108 059E  
                    l1060 07A1                      l1052 077E                      l1220 0736  
                    l1212 0732                      l1204 0712                      l1132 0547  
                    l1118 04E8                      l1070 07BF                      l1062 07A5  
                    l1054 078B                      l1142 0505                      l1230 0770  
                    l1222 0737                      l1214 0733                      l1206 0718  
                    l1134 054A                      l1080 07D0                      l1072 07C0  
                    l1064 07A8                      l1056 0791                      l1232 0557  
                    l1152 0667                      l1144 0655                      l1224 0738  
                    l1216 0734                      l1208 0726                      l1240 05FA  
                    l1136 054F                      l1128 0540                      l1160 0627  
                    l1320 06C1                      l1138 04F2                      l1090 07EA  
                    l1082 07D1                      l1074 07C4                      l1066 07B1  
                    l1058 0797                      l1234 0562                      l1154 0674  
                    l1146 0666                      l1226 0742                      l1218 0735  
                    l1242 0602                      l1170 0649                      l1162 0637  
                    l1092 0578                      l1084 07D6                      l1068 07B2  
                    l1076 07C7                      l1236 056A                      l1156 0678  
                    l1228 0766                      l1244 060A                      l1172 064D  
                    l1316 0685                      l1182 05B3                      l1174 05A2  
                    l1094 057B                      l1086 07DC                      l1078 07C8  
                    l1238 056E                      l1158 067E                      l1246 0611  
                    l1318 06B5                      l1184 05C3                      l1176 05B2  
                    l1096 0588                      l1088 07E6                      l1248 061A  
                    l1168 0638                      l1186 05C7                      l1098 0589  
                    l1194 06D6                      l1196 06E3                      l1188 06D4  
                    l1198 06EE                      _main 0685                      btemp 007E  
                    start 0000   __size_of_salvar_receita 002D         fp__salvar_receita 0018  
       _formatar_receitas 0000      __end_of_EEPROM_write 0557                     ?_main 0070  
                   _EEADR 010D                     _EEDAT 010C           __end_of_dispLCD 0577  
        receita_livre@aux 0077          receita_livre@rec 0074                     _delay 052A  
         salvar_receita@i 007A                     fpbase 0008                     pclath 000A  
                   status 0003                     wtemp0 007E           EEPROM_read@addr 0070  
    __end_of_dispLCD_init 077A      __size_of_EEPROM_read 000E           __initialization 07EE  
            __end_of_main 06D4          ?_dispLCD_dataReg 0070                    ??_main 007B  
        ?_dispLCD_newChar 0073        dispLCD_newChar@ptr 0073          ?_dispLCD_instReg 0070  
                  ?_delay 0070                    _EEADRH 010F                    _EECON2 018D  
    __size_of_end_receita 0012          __end_of__fptable 001B                    _linha0 003C  
                  _linha1 002C                    delay@t 0070                 ??_dispLCD 0079  
                  fptable 0003            _buscar_receita 05A2                    fptotal 000C  
 __end_of__initialization 07FC            _salvar_receita 0627   __size_of_dispLCD_lincol 0013  
          __pcstackCOMMON 0070     __size_of_EEPROM_write 0018              __pidataBANK0 05CE  
           __end_of_delay 053F            receita_livre@i 0079    __end_of_buscar_receita 05CE  
                 ??_delay 0072     __size_of_dispLCD_init 0054    __end_of_salvar_receita 0654  
            _EEPROM_write 053F       dispLCD_newChar@adrs 0075                __pmaintext 0685  
  __size_of_receita_livre 0052          fp__receita_livre 0015                _dispLCD_B0 0000  
              _dispLCD_B1 0000                _dispLCDstr 05FA           ?_buscar_receita 0074  
                 _LCDbits 0008              _dispLCD_init 0726            _newChar_degree 0021  
              __stringtab 001B           ?_salvar_receita 0074          EEPROM_write@addr 0071  
        EEPROM_write@data 0070                   _dispLCD 0557                   __ptext1 0627  
                 __ptext2 053F                   __ptext3 06D4                   __ptext4 05FA  
                 __ptext5 0726                   __ptext6 0654                   __ptext7 052A  
                 __ptext8 0557                   __ptext9 0504    __end_of_newChar_degree 0029  
                 _receita 0027         salvar_receita@aux 0078             _receita_livre 06D4  
    end_of_initialization 07FC            _dispLCD_lincol 0504             ??_EEPROM_read 0070  
              dispLCD@col 0077                dispLCD@lin 0076                dispLCD@str 0078  
             ?_dispLCDstr 0076                fp__dispLCD 000C            ?_receita_livre 0074  
               _TRISDbits 0088  __size_of_dispLCD_dataReg 002B             ??_end_receita 0072  
__size_of_dispLCD_newChar 0031    __end_of_dispLCD_lincol 0517  __size_of_dispLCD_instReg 0074  
     __end_of_EEPROM_read 04F2       start_initialization 07EE       __size_of_dispLCDstr 002D  
         ?_dispLCD_lincol 0073       __end_of_end_receita 0504         dispLCD_lincol@col 0073  
       dispLCD_lincol@lin 0075          ??_buscar_receita 0076                init_fetch0 0517  
             __pdataBANK0 0020           ??_receita_livre 0075                 ___latbits 0002  
        ??_salvar_receita 0076         __size_of__fptable 0018           _deletar_receita 0000  
       ??_dispLCD_dataReg 0070               _EEPROM_read 04E4         ??_dispLCD_newChar 0074  
       ??_dispLCD_instReg 0070                 __pfunctab 0003               _dispLCD_clr 0000  
             _dispLCD_num 0000                  ?_dispLCD 0076                 __pstrings 001B  
          __size_of_delay 0015               _end_receita 04F2              ??_dispLCDstr 0077  
        dispLCD_dataReg@d 0071             dispLCDstr@str 0076               __stringbase 0020  
      __end_of_dispLCDstr 0627          dispLCD_newChar@i 0076                _EECON1bits 018C  
        dispLCD_instReg@i 0072           fp__dispLCD_init 000F        buscar_receita@data 0075  
      buscar_receita@adrs 0074        __end_of__stringtab 0021          __size_of_dispLCD 0020  
                __fptable 0003          ??_dispLCD_lincol 0074                  __ptext10 077A  
                __ptext11 0577                  __ptext12 05A2                  __ptext13 04F2  
                __ptext14 04E4             ?_EEPROM_write 0070             __size_of_main 004F  
      salvar_receita@data 0075        salvar_receita@adrs 0074                _INTCONbits 000B  
           ?_dispLCD_init 0070           _dispLCD_dataReg 0577                  init_ram0 051B  
         _dispLCD_newChar 0654         buscar_receita@aux 0078           _dispLCD_instReg 077A  
          ??_EEPROM_write 0071              ?_EEPROM_read 0070                 stringcode 001B  
           fp__dispLCDstr 0012            ??_dispLCD_init 0077     __end_of_receita_livre 0726  
                stringdir 001B                  stringtab 001B              end_receita@x 0070  
            ?_end_receita 0070           buscar_receita@i 007A  
